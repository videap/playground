apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: gcp-secret-store-alpine
spec:
  provider: gcp # accepted provider options: azure or vault or gcp
  parameters:
    auth: provider-adc
    secrets: |
      - resourceName: projects/eliternfirebase/secrets/hello_world/versions/latest
        path: "hello.txt"
  secretObjects:
  - secretName: hello
    type: Opaque
    data:
    - objectName: "hello.txt"
      key: value

---

apiVersion: v1
kind: Pod
metadata:
  name: alpine
  labels:
    app: alpine
spec:
  containers:
  - name: alpine
    image: alpine:latest
    args: [/bin/sh, -c,'sleep infinity']
    imagePullPolicy: IfNotPresent
    volumeMounts:
    - name: gcp-secret-store-vol
      mountPath: "/var/secrets-store"
    - name: service-account-key
      mountPath: /var/run/secrets/developer-sa-key/service-account-key
    # env:
    # - name: HELLO_WORLD
    #   valueFrom:
    #     secretKeyRef:
    #       name: hello
    #       key: value
    # - name: GOOGLE_APPLICATION_CREDENTIALS
    #   value: /var/run/secrets/developer-sa-key/service-account-key/developer-sa-key.json #generated file from the volume/secret
    resources:
          limits:
            memory: 100Mi
            cpu: 100m
  volumes:
    - name: gcp-secret-store-vol
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: "gcp-secret-store-alpine"
    - name: service-account-key
      secret:
        secretName: developer-sa-key
